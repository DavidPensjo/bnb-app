generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)

  bookings  Booking[]
  listings  Listing[]
}


model Listing {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String
  location          String
  pricePerNight     Float
  availability      Boolean  @default(true)
  images            String[]
  rooms             Int
  beds              Int

  hasDishwasher       Boolean  @default(false)
  hasWifi             Boolean  @default(false)
  hasAirConditioning  Boolean  @default(false)
  hasPool             Boolean  @default(false)
  hasParking          Boolean  @default(false)
  hasGym              Boolean  @default(false)
  hasWasher           Boolean  @default(false)
  hasDryer            Boolean  @default(false)

  createdBy           User     @relation(fields: [userId], references: [id]) 
  userId              String   @db.ObjectId  

  bookings            Booking[]
}



model Booking {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  listing     Listing       @relation(fields: [listingId], references: [id])
  listingId   String        @db.ObjectId
  user        User          @relation(fields: [userId], references: [id])
  userId      String        @db.ObjectId
  checkInDate DateTime
  checkOutDate DateTime
  totalPrice  Float
  status      BookingStatus @default(PENDING)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

enum BookingStatus {
  PENDING
  ACCEPTED
  REJECTED
}


